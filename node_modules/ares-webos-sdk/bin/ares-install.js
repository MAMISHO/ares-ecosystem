var fs=require("fs"),path=require("path"),async=require("async"),log=require("npmlog"),nopt=require("nopt"),ipkg=require("./../lib/ipkg-tools"),versionTool=require("./../lib/version-tools"),cliControl=require("./../lib/cli-control"),help=require("./../lib/helpFormat"),novacom=require("./../lib/novacom"),deviceTools=require("./../lib/setup-device"),processName=path.basename(process.argv[1]).replace(/.js/,"");
process.on("uncaughtException",function(a){log.error("uncaughtException",a.toString());log.info("uncaughtException",a.stack);cliControl.end(-1)});2===process.argv.length&&process.argv.splice(2,0,"--help");
var knownOpts={device:[String,null],"device-list":Boolean,list:Boolean,listfull:Boolean,type:[String,null],install:path,remove:String,opkg:Boolean,"opkg-param":[String,null],version:Boolean,help:Boolean,"hidden-help":Boolean,level:"silly verbose info http warn error".split(" ")},shortHands={d:["--device"],i:["--install"],r:["--remove"],o:["--opkg"],op:["--opkg-param"],l:["--list"],F:["--listfull"],t:["--type"],D:["--device-list"],V:["--version"],h:["--help"],hh:["--hidden-help"],v:["--level","verbose"]},
argv=nopt(knownOpts,shortHands,process.argv,2);log.heading=processName;log.level=argv.level||"warn";ipkg.installer.log.level=log.level;if(argv.help||argv["hidden-help"])showUsage(argv["hidden-help"]),cliControl.end();log.verbose("argv",argv);var op;argv.list?op=list:argv.listfull?op=listFull:argv.install?op=install:argv.remove?op=remove:argv["device-list"]?deviceTools.showDeviceListAndExit():argv.version?versionTool.showVersionAndExit():op=install;
var options={appId:"com.ares.defaultName",device:argv.device,opkg:argv.opkg||!1,opkg_param:argv["opkg-param"]};op&&versionTool.checkNodeVersion(function(a){op(finish)});
function showUsage(a){var c=["","NAME",help.format(processName+" - Install/Remove applications"),"","SYNOPSIS",help.format(processName+" [OPTION...] <PACKAGE_FILE>"),"",help.format(processName+" [OPTION...] -r, --remove <APP_ID>"),"","OPTION",help.format("-d, --device <DEVICE>","Specify DEVICE to use"),help.format("-D, --device-list","List the available DEVICEs"),help.format("-l, --list","List the installed app IDs"),help.format("-F, --listfull","List the installed app detailed infomatins"),help.format("-t, --type <TYPE>",
"Specify app TYPE (web, native, ...)"),help.format("","followed by '--list' or '--listfull'"),help.format("--level <LEVEL>","tracing LEVEL is one of 'silly', 'verbose', 'info', 'http', 'warn', 'error' [warn]"),help.format("-h, --help","Display this help"),help.format("-V, --version","Display version info"),"","DESCRIPTION",help.format("To install .ipk package into TARGET DEVICE,"),help.format("user have to specify the TARGET DEVICE using '--device, -d' option"),"",help.format("APP_ID is an application id described in appinfo.json"),
"","Examples:","","# Install package into emulator",processName+" ~/projects/packages/com.examples.app_1.0_all.ipk -d emulator","","# Remove an application on emulator",processName+" -r com.examples.app -d emulator","","# List the applications installed in emulator",processName+" -l -d emulator","","# List web type apps among the applications installed in emulator",processName+" -l -t web -d emulator",""];this.hiddenhelpString=["","EXTRA-OPTION",help.format("-o, --opkg","Use opkg tool for installing/removing package"),
help.format("-op, --opkg-param <PARAMS>","parameters for opkg tool"),help.format("","this option is available only for the device allowing root-connection"),"EXAMPLES","","# Install .ipk by 'opkg install' command",processName+" <PACKAGE_FILE> -d <DEVICE> --opkg","","# Remove .ipk by 'opkg remove' command","# (Note.) To remove a package by opkg command, <PACKAG_NAME> should be specified instead of <APP_ID>","# (Note.) Please refer to 'ares-package --hidden-help', it provides '--pkgname' option for making .ipk",
processName+" -r <PACKAGE_NAME> -d <DEVICE> --opkg","","# Install .ipk by 'opkg install' with parameters",processName+' <PACKAGE_FILE> -d <DEVICE> --opkg --opkg-param "-o /media/developer/apps"',""];help.print(c);a&&help.print(hiddenhelpString)}
function install(){var a=argv.install||argv.argv.remain[0];log.info("install():","pkgPath:",a);if(!a)showUsage(),cliControl.end(-1);else if(!fs.existsSync(path.normalize(a)))return finish(Error(a+" does not exist."));ipkg.installer.install(options,a,finish)}function list(){ipkg.installer.list(options,function(a,c){var b="",d=0;c instanceof Array&&c.forEach(function(a){argv.type&&argv.type!==a.type||(0!==d++&&(b=b.concat("\n")),b=b.concat(a.id))});console.log(b);finish(a)})}
function listFull(){ipkg.installer.list(options,function(a,c){var b="";c instanceof Array&&c.forEach(function(a){if(!argv.type||argv.type===a.type){b=b.concat("----------------\n");b=b.concat("id:"+a.id+", ");for(key in a)"id"!=key&&(b=b.concat(key+":").concat(a[key]).concat(", "));b=b.concat("\n")}});process.stdout.write(b);finish(a)})}
function remove(){var a="true"===argv.remove?argv.argv.remain[0]:argv.remove;log.info("remove():","pkgId:",a);if(!a)return finish(Error("APP_ID must be specified"));ipkg.installer.remove(options,a,finish)}function finish(a,c){log.info("finish():","err:",a);a?(log.error(processName+": "+a.toString()),log.verbose(a.stack),cliControl.end(-1)):(log.info("finish():",c),c&&c.msg&&console.log(c.msg),cliControl.end())};
