var util=require("util"),async=require("async"),path=require("path"),npmlog=require("npmlog"),request=require("request"),spawn=require("child_process").spawn,fs=require("fs"),readLine=require("readline"),novacom=require("./novacom"),prefixPath="/media/developer/",defaultNativeAppInstallPath=prefixPath+"apps/usr/palm/applications",defaultNativeSvcInstallPath=prefixPath+"apps/usr/palm/services",defaultGdbserverPort="9930";
(function(){var d=npmlog;d.heading="gdbserver";d.level="warn";var m={log:d,session:null,run:function(a,g,e){function r(b){d.verbose("gdbserver#_makeSession");a.nReplies=1;a.session=new novacom.Session(a.device,b)}function c(b,n){function f(b){e=Buffer.isBuffer(b)?b.toString().trim():b.trim();if("{"===e[0])d.verbose("gdbserver#run()#_readAppInfo#metaData:",e),n(null,e);else return n(Error("Failed to get appinfo.json"))}d.verbose("gdbserver#_readAppInfo");this.session=b;var s=h||k;if(h)var c=path.join(defaultNativeAppInstallPath,
h,"appinfo.json");else if(k)c=path.join(defaultNativeSvcInstallPath,k,"services.json");else return n(Error("gdbserver launch failed due to no appId"));var c=c.replace(/\\/g,"/"),t="cat "+c,e;async.series([function(b){a.session.run(t,process.stdin,f,process.stderr,b)}],function(b,a){if(b)return n(Error(s+" was not installed"))})}function u(b,a){d.verbose("gdbserver#run()#_getExecFileName#metaData:",b);try{var f=JSON.parse(b);if(h){if(!f.main)return a(Error("Failed to get Executable File Name from appinfo.json"));
this.execName=f.main}else if(k){if("native"!==f.engine)return a(Error(f.id+" is not a native service"));this.execName=f.executable}d.verbose("gdbserver#run()#_getExecFileName#execName:",this.execName);a()}catch(c){a(c)}}function q(b,c){function f(a){a=Buffer.isBuffer(a)?a.toString().trim():a.trim();if("0"===a)e.port=b,c();else if("1"===a)b=Number(b)+1,q(b,c);else return c(Error("Failed to get Debug Port"))}d.verbose("gdbserver#run()#_findNewDebugPort#gdbPort:",b);null===b&&(b=p);"function"===typeof b&&
(c=b,b=p);var e=this,g=util.format("netstat -ltn 2>/dev/null | grep :%s | wc -l",b);async.series([function(b){a.session.run(g,process.stdin,f,process.stderr,b)}],function(a,b){if(a)return c(a)})}function m(b){function c(a){f=Buffer.isBuffer(a)?f.concat(a.toString()):f.concat(a);setImmediate(b,null,f)}d.verbose("gdbserver#run()#_getEnvFromDevice");if("root"!=a.session.getDevice().username)setImmediate(b,null,"");else{var f="";a.session.run("find /etc/jail_native_devmode.conf 2>/dev/null | xargs awk '/setenv/{printf \"export %s=%s;\\n\", $2,$3}' | xargs echo",
null,c,null,function(a){if(a)return setImmediate(b,a)})}}function v(a,c){d.verbose("gdbserver#run()#_addUserEnv");if(h)var f={SDL_VIDEODRIVER:"wayland",XDG_RUNTIME_DIR:"/tmp/xdg",LD_LIBRARY_PATH:"$LD_LIBRARY_PATH:"+path.join(defaultNativeAppInstallPath,h,"lib").replace(/\\/g,"/")};else k&&(f={LD_LIBRARY_PATH:"$LD_LIBRARY_PATH:"+path.join(defaultNativeSvcInstallPath,k,"lib").replace(/\\/g,"/")});f=a.concat(function(a,b){var c="";Object.keys(a).forEach(function(b){c=c.concat("export ").concat(b).concat("=").concat(a[b]).concat(";")});
return c}(f));c(null,f)}function w(b,c){d.verbose("gdbserver#run()#_launchGdbserver");if(h)var f=util.format("gdbserver :%s %s",this.port,path.join(defaultNativeAppInstallPath,h,this.execName));else k&&(f=util.format("gdbserver :%s %s",this.port,path.join(defaultNativeSvcInstallPath,k,this.execName)));f=f.replace(/\\/g,"/");a.session.runNoHangup(b+f,function(a){a=Buffer.isBuffer(a)?a.toString():a;console.log("[gdbserver] "+a)},function(){d.verbose("gdbserver#run()#_launchGdbserver#__exit");process.exit(0)},
c)}function x(b){d.verbose("gdbserver#run()#_portForward");a.session.forward(this.port,this.port,b)}function y(b,c){d.verbose("gdbserver#run()#_waitExit");"function"!==typeof b&&(console.error(b),c(b));var f=a.session.getDevice();console.log(" >> gdb can connect to [target remote",f.host+":"+this.port+"]\n")}if("function"!==typeof e)throw Error("Missing completion callback (next="+util.inspect(e)+")");var l=this,h=a.appId,k=a.serviceId,p=a.port||defaultGdbserverPort;if(h||k){var z=0;process.on("SIGINT",
function(){d.verbose("This is SIGINT handling...");0<z++&&(d.verbose("To prevent hangup due to an abnormal disconnection"),process.exit(1));async.waterfall([l.getPidUsingPort.bind(l,l.port),l.killProcByPid.bind(l),function(a){setTimeout(a,1E3)}],function(a,c){a&&process.exit(1);process.exit(0)})});async.waterfall([r.bind(this),c.bind(this),u.bind(this),this.getPidUsingPort.bind(this,p),this.killProcByPid.bind(this),q.bind(this,p),m.bind(this),v.bind(this),w.bind(this),x.bind(this),y.bind(this)],function(a,
c){d.verbose("gdbserver#run()","err: ",a,"result:",c);e(a,c)})}else e(Error("gdbserver launch failed due to no appId"))},close:function(a,g,e){d.verbose("gdbserver#close");g=a.port||defaultGdbserverPort;if("function"!==typeof e)throw Error("Missing completion callback (next="+util.inspect(e)+")");async.waterfall([function(e){a.nReplies=1;a.session=new novacom.Session(a.device,e)}.bind(this),function(a,c){this.session=a;c()}.bind(this),this.getPidUsingPort.bind(this,g),this.killProcByPid.bind(this),
function(a){setTimeout(a,1E3)},this.closeSession],function(a,c){d.verbose("gdbserver#close()","err: ",a,"results:",c);e(a,c)})},killPrevGdbserver:function(a){options.session?this.session.runNoHangup("kill -9 `pidof gdbserver` 2>/dev/null",a):a(Error("gdbserver#killPrevGdbserver()#no session"))},getPidUsingPort:function(a,d){function e(a){(a=Buffer.isBuffer(a)?a.toString().trim():a.trim())?(a=a.split(" ").filter(function(a){return""!==a.trim()}),d(null,a)):d()}"function"===typeof a&&(d=a,a=defaultGdbserverPort);
if(this.session){var m=util.format("fuser -n tcp %s 2>/dev/null | awk '{print $0}' | xargs echo",a);async.series([function(a){this.session.run(m,process.stdin,e,process.stderr,a)}.bind(this)],function(a,e){if(a)return d(a)})}else d(Error("gdbserver#getPidUsingPort()#no session"))},killProcByPid:function(a,g){d.verbose("gdbserver#killProcByPid");if("function"===typeof a)return a();if(!this.session)return g(Error("gdbserver#killPrevGdbserver()#no session"));var e=[];if(a instanceof Array)e=a;else if(a instanceof
String)e.push(a);else return g(Error("gdbserver#killPrevGdbserver()#no pid"));e=util.format("kill -9 %s 2>/dev/null",e.join(" "));this.session.runNoHangup(e,g)},closeSession:function(a){if(!this.session)return d.verbose("This session is already terminated"),a();this.session.end();this.session=null;a()}};"undefined"!==typeof module&&module.exports&&(module.exports=m)})();
